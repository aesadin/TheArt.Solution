// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheArt.Models;

namespace TheArt.Migrations
{
    [DbContext(typeof(TheArtContext))]
    partial class TheArtContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TheArt.Models.Artist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ArtistName");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<DateTime>("DateOfDeath");

                    b.HasKey("ArtistId");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("TheArt.Models.ArtistMovement", b =>
                {
                    b.Property<int>("ArtistMovementId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ArtistId");

                    b.Property<int>("MovementId");

                    b.HasKey("ArtistMovementId");

                    b.HasIndex("ArtistId");

                    b.HasIndex("MovementId");

                    b.ToTable("ArtistMovement");
                });

            modelBuilder.Entity("TheArt.Models.Movement", b =>
                {
                    b.Property<int>("MovementId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("MovementDescription");

                    b.Property<DateTime>("MovementEnd");

                    b.Property<string>("MovementName");

                    b.Property<DateTime>("MovementStart");

                    b.HasKey("MovementId");

                    b.ToTable("Movements");
                });

            modelBuilder.Entity("TheArt.Models.Piece", b =>
                {
                    b.Property<int>("PieceId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ArtistId");

                    b.Property<DateTime>("PieceDate");

                    b.Property<byte[]>("PieceImage");

                    b.Property<string>("PieceName");

                    b.HasKey("PieceId");

                    b.HasIndex("ArtistId");

                    b.ToTable("Pieces");
                });

            modelBuilder.Entity("TheArt.Models.ArtistMovement", b =>
                {
                    b.HasOne("TheArt.Models.Artist", "Artist")
                        .WithMany("Movements")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TheArt.Models.Movement", "Movement")
                        .WithMany("Artists")
                        .HasForeignKey("MovementId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TheArt.Models.Piece", b =>
                {
                    b.HasOne("TheArt.Models.Artist", "Artist")
                        .WithMany("Pieces")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
